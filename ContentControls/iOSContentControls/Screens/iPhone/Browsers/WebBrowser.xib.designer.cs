// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Example_ContentControls.Screens.iPhone.Browsers {
	
	
	// Base type probably should be MonoTouch.UIKit.UIViewController or subclass
	[MonoTouch.Foundation.Register("WebBrowser")]
	public partial class WebBrowser {
		
		private MonoTouch.UIKit.UIView __mt_view;
		
		private MonoTouch.UIKit.UIButton __mt_btnBack;
		
		private MonoTouch.UIKit.UIButton __mt_btnForward;
		
		private MonoTouch.UIKit.UIButton __mt_btnGo;
		
		private MonoTouch.UIKit.UIButton __mt_btnStop;
		
		private MonoTouch.UIKit.UITextField __mt_txtAddress;
		
		private MonoTouch.UIKit.UIWebView __mt_webMain;
		
		private MonoTouch.UIKit.UIActivityIndicatorView __mt_imgBusy;
		
		#pragma warning disable 0169
		[MonoTouch.Foundation.Connect("view")]
		private MonoTouch.UIKit.UIView view {
			get {
				this.__mt_view = ((MonoTouch.UIKit.UIView)(this.GetNativeField("view")));
				return this.__mt_view;
			}
			set {
				this.__mt_view = value;
				this.SetNativeField("view", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("btnBack")]
		private MonoTouch.UIKit.UIButton btnBack {
			get {
				this.__mt_btnBack = ((MonoTouch.UIKit.UIButton)(this.GetNativeField("btnBack")));
				return this.__mt_btnBack;
			}
			set {
				this.__mt_btnBack = value;
				this.SetNativeField("btnBack", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("btnForward")]
		private MonoTouch.UIKit.UIButton btnForward {
			get {
				this.__mt_btnForward = ((MonoTouch.UIKit.UIButton)(this.GetNativeField("btnForward")));
				return this.__mt_btnForward;
			}
			set {
				this.__mt_btnForward = value;
				this.SetNativeField("btnForward", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("btnGo")]
		private MonoTouch.UIKit.UIButton btnGo {
			get {
				this.__mt_btnGo = ((MonoTouch.UIKit.UIButton)(this.GetNativeField("btnGo")));
				return this.__mt_btnGo;
			}
			set {
				this.__mt_btnGo = value;
				this.SetNativeField("btnGo", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("btnStop")]
		private MonoTouch.UIKit.UIButton btnStop {
			get {
				this.__mt_btnStop = ((MonoTouch.UIKit.UIButton)(this.GetNativeField("btnStop")));
				return this.__mt_btnStop;
			}
			set {
				this.__mt_btnStop = value;
				this.SetNativeField("btnStop", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("txtAddress")]
		private MonoTouch.UIKit.UITextField txtAddress {
			get {
				this.__mt_txtAddress = ((MonoTouch.UIKit.UITextField)(this.GetNativeField("txtAddress")));
				return this.__mt_txtAddress;
			}
			set {
				this.__mt_txtAddress = value;
				this.SetNativeField("txtAddress", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("webMain")]
		private MonoTouch.UIKit.UIWebView webMain {
			get {
				this.__mt_webMain = ((MonoTouch.UIKit.UIWebView)(this.GetNativeField("webMain")));
				return this.__mt_webMain;
			}
			set {
				this.__mt_webMain = value;
				this.SetNativeField("webMain", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("imgBusy")]
		private MonoTouch.UIKit.UIActivityIndicatorView imgBusy {
			get {
				this.__mt_imgBusy = ((MonoTouch.UIKit.UIActivityIndicatorView)(this.GetNativeField("imgBusy")));
				return this.__mt_imgBusy;
			}
			set {
				this.__mt_imgBusy = value;
				this.SetNativeField("imgBusy", value);
			}
		}
	}
}
