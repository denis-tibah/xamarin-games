// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Example_ContentControls.Screens.iPhone.CustomizingNavBar {
	
	
	// Base type probably should be MonoTouch.UIKit.UIViewController or subclass
	[MonoTouch.Foundation.Register("CustomizingNavBarScreen")]
	public partial class CustomizingNavBarScreen {
		
		private MonoTouch.UIKit.UIView __mt_view;
		
		private MonoTouch.UIKit.UIButton __mt_btnChangeBarStyle;
		
		private MonoTouch.UIKit.UIButton __mt_btnChangeTintColor;
		
		private MonoTouch.UIKit.UIButton __mt_btnShowHideRightButton;
		
		private MonoTouch.UIKit.UISwitch __mt_swchTransparent;
		
		private MonoTouch.UIKit.UIButton __mt_btnShowToolbar;
		
		#pragma warning disable 0169
		[MonoTouch.Foundation.Connect("view")]
		private MonoTouch.UIKit.UIView view {
			get {
				this.__mt_view = ((MonoTouch.UIKit.UIView)(this.GetNativeField("view")));
				return this.__mt_view;
			}
			set {
				this.__mt_view = value;
				this.SetNativeField("view", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("btnChangeBarStyle")]
		private MonoTouch.UIKit.UIButton btnChangeBarStyle {
			get {
				this.__mt_btnChangeBarStyle = ((MonoTouch.UIKit.UIButton)(this.GetNativeField("btnChangeBarStyle")));
				return this.__mt_btnChangeBarStyle;
			}
			set {
				this.__mt_btnChangeBarStyle = value;
				this.SetNativeField("btnChangeBarStyle", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("btnChangeTintColor")]
		private MonoTouch.UIKit.UIButton btnChangeTintColor {
			get {
				this.__mt_btnChangeTintColor = ((MonoTouch.UIKit.UIButton)(this.GetNativeField("btnChangeTintColor")));
				return this.__mt_btnChangeTintColor;
			}
			set {
				this.__mt_btnChangeTintColor = value;
				this.SetNativeField("btnChangeTintColor", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("btnShowHideRightButton")]
		private MonoTouch.UIKit.UIButton btnShowHideRightButton {
			get {
				this.__mt_btnShowHideRightButton = ((MonoTouch.UIKit.UIButton)(this.GetNativeField("btnShowHideRightButton")));
				return this.__mt_btnShowHideRightButton;
			}
			set {
				this.__mt_btnShowHideRightButton = value;
				this.SetNativeField("btnShowHideRightButton", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("swchTransparent")]
		private MonoTouch.UIKit.UISwitch swchTransparent {
			get {
				this.__mt_swchTransparent = ((MonoTouch.UIKit.UISwitch)(this.GetNativeField("swchTransparent")));
				return this.__mt_swchTransparent;
			}
			set {
				this.__mt_swchTransparent = value;
				this.SetNativeField("swchTransparent", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("btnShowToolbar")]
		private MonoTouch.UIKit.UIButton btnShowToolbar {
			get {
				this.__mt_btnShowToolbar = ((MonoTouch.UIKit.UIButton)(this.GetNativeField("btnShowToolbar")));
				return this.__mt_btnShowToolbar;
			}
			set {
				this.__mt_btnShowToolbar = value;
				this.SetNativeField("btnShowToolbar", value);
			}
		}
	}
}
