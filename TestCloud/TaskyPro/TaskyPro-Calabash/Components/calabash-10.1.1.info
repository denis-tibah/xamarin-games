{"Name":"Xamarin Test Cloud Agent","Id":1041,"Alias":"calabash","Description":"Xamarin Test Cloud Agent enables you to write and execute automated acceptance tests of mobile apps. It provides APIs that are specialized to interactive with native iOS and Android apps running on touch\n screen devices. When you submit your app to [Xamarin Test Cloud]\n (http://xamarin.com/test-cloud), you can automatically test your app on \n hundreds of mobile devices.\n\nThe Xamarin Test Cloud Agent consists of libraries that enable test-code to \nprogrammatically interact with native and hybrid apps. The interaction consists of a number of end-user actions. Each action can be one of:\n\n**Gestures**  \n\n - Touches or gestures (e.g., tap, swipe and rotate).\n\n**Assertions**  \n\n - For example: there should be a \"Login\" button or the web view should contain an \"h1\" tag with the text \"Hello\".\n\n**Screenshots**  \n\n - Screendump the current view on the current device model\n\n### So Easy ###\n\nIt couldn\u0027t be any easier to incorporate the Xamarin Test Cloud Agent into your \napplication. All it takes is just one line of code:\n\n```csharp\nXamarin.Calabash.Start();\n```\n\nWhen your app runs, it now is listening for commands issued by a test runner, such as the one used by the [Xamarin Test Cloud](http://xamarin.com/test-cloud).\n\n### Note ###\n\nThis component currently only provides the Xamarin Test Cloud agent server \nlibrary, which is required to run custom tests using either [Xamarin.UITest]\n(http://developer.xamarin.com/guides/testcloud/uitest) or [Calabash]\n(http://developer.xamarin.com/guides/calabash). For more information about creating automated tests, check the [Xamarin Test Cloud documentation](http://developer.xamarin.com/testcloud).\n","Version":"10.1.1","Summary":"Run automated acceptance tests of your iOS and Android apps.","QuickStart":"Xamarin Test Cloud Agent consists of libraries that enable test-code to \nprogrammatically interact with native and hybrid apps. \n\n###So Easy###\n\nIt couldn\u0027t be any easier to incorporate the Xamarin Test Cloud Agent into your application. All it takes is just one line of code, which is added to your `AppDelegate`\u0027s `FinishedLaunching` method:\n\n```csharp\nXamarin.Calabash.Start();\n```\n\nOnce up and running, the Xamarin Test Cloud Agent advertises itself using the [Bonjour protocol](https://developer.apple.com/bonjour/). This lets the client discover, connect, and begin testing your app.\n\nIn order for the Xamarin Test Cloud Agent to pull off its magic, it has to use some of Apple\u0027s private APIs. That means you don\u0027t want to ship your application with Xamarin Test Cloud Agent bits still in it.\n\nTo make your life easy, we leverage our sophisticated linker which removes code that isn\u0027t needed. Just wrap your call to `Start` Xamarin Test Cloud in an `#if` directive:\n\n```csharp\n#if DEBUG\nXamarin.Calabash.Start();\n#endif\n```\n\nThis will ensure that your release build will not include any of the Xamarin \nTest Cloud bits.\n","Hash":"3343e134fc1b2e7c76e2b3b1f2aed6f6","TargetPlatforms":["ios"],"TrialHash":null}